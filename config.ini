[OBJECTS]

    #The program WILL combine the objects from the file and SQL
    #File containing list of objects
    FILE = testdata.csv

    #SQL databse to get data from
    SQLDB =

    #SQLDB table to get data from
    SQLTABLE =

    #SQL ID column
    SQLID =

    #SQL columns to get top n (set n in SQLTOPN). Leave blank for getting all the objects
    #Format: SQLCOLUMNS =col1,col2,col3,...
    SQLCOLUMNS =

    #Top n of the columns
    SQLTOPN =

    #SQL descending order
    SQLDESC =

[LOCATION]

    #MPC Observatory code
    #Avaliable here: https://www.minorplanetcenter.net/iau/lists/ObsCodesF.html
    MPCCODE = G37

    #LONGITUDE, LATITUDE, and ELEVATION don't need to be set if using MPCCODE
    #IF MPCCODE is set, it'll be used

    #Longitude of observatory
    LONGITUDE =

    #Latitude of observatory
    LATITUDE =

    #Elevation (in km above ellipsoid) of observatory
    ELEVATION =

[EPOCHS]

    #List of Julian Date epocs
    #Format: EPOCHS =jd1,jd2,jd3 or EPOCHS = jd
    EPOCHS =

    #Use STARTDATE, ENDDATE, STEP, SKIPDAYLIGHT if a range of times is wanted
    #If EPOCHS is set, it'll be used

    #The starting date of the epochs
    #Format: YYYY-MM-DD [HH:MM:SS]
    STARTDATE = 2020-05-10

    #The ending date of the epochs
    #Format: YYYY-MM-DD [HH:MM:SS]
    ENDDATE = 2020-05-30

    #The time step for the epochs
    #Format: 1m, 3h, 10d
    STEP = 1h

    #To skip daylight times
    SKIPDAYLIGHT = true

[EPHEMERIDES]

    #The max airmass to use
    MAXAIRMASS = 2

    #The max apparent magnitude to use
    MAXMAG = 20

[OUTPUT]

    #Data to see
    #Refer to https://ssd.jpl.nasa.gov/?horizons_doc#table_quantities for data names
    #"local_time" is also available as a column if it is set in ADDTIMEZONE
    #Format: COLUMNS =targetname,airmass,V,RA,DEC
    COLUMNS =targetname,local_time,airmass,V,RA,DEC

    #Apply a time zone to the epochs
    #Run the following code to get a list of supported timezones
    #import pytz
    #pytz.all_timezones
    ADDTIMEZONE = US/Arizona

    #Time format
    #Refer to https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior for formatting
    #Use double % (%Y -> %%Y)
    TIMEFORMAT = %%Y-%%m-%%d - %%H:%%M:%%S

    #To graph the observable targets
    GRAPHENABLED = true

    #What to graph on the y axis (choose upto 2) (the x will be time)
    #Format: COLUMNS =airmass,V
    YAXIS = V